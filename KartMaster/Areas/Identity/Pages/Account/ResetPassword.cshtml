@* 
    Página: ResetPassword.cshtml
    Objetivo: Permite ao utilizador definir uma nova palavra-passe após clicar no link de recuperação enviado por email.
    Notas:
    - Inclui campos para email, nova password e confirmação.
    - Implementa visibilidade alternada da password (👁️).
    - Apresenta validações automáticas com mensagens de erro.
*@
@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Atualizar palavra-passe";
}

<style>
    /* Fundo escurecido com imagem de fundo */
    body {
        background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/images/fundoResetPassword.jpg') no-repeat center center fixed;
    }

    /* Centraliza vertical e horizontalmente o formulário */
    .center-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
    }

    /* Container do formulário com efeito de vidro esbatido (frosted glass) */
    .reset-container {
        background-color: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
        width: 100%;
        max-width: 400px;
        color: #fff;
    }

    /* Estilo para títulos */
    h1, h2 {
        text-align: center;
        margin-bottom: 20px;
    }

    /* Estilo para inputs */
    .form-control {
        background-color: rgba(255, 255, 255, 0.9);
        border: none;
        color: #000;
    }

        /* Cor do placeholder dos inputs */
        .form-control::placeholder {
            color: black;
        }

    /* Estilo para os labels dos inputs */
    .form-label {
        color: black;
        font-weight: bold;
    }

    /* Botão de submissão */
    .btn-primary {
        background-color: #007bff;
        border: none;
        font-weight: bold;
    }

    /* Mensagens de erro de validação */
    .text-danger {
        color: #ff6b6b !important;
        margin-top: 0.25rem;
        font-size: 0.875em;
    }

    /* Garante espaço lateral no input para o botão do olho */
    .form-floating > .form-control {
        padding-right: 2.5rem; /* espaço para o botão olho */
    }

    /* Wrapper para inputs de password com botão do olho */
    .password-wrapper {
        position: relative;
        margin-bottom: 0.5rem;
    }

    /* Botão "mostrar password" (👁️) posicionado à direita dentro do input */
    .toggle-password {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: transparent;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 0;
        line-height: 1;
        z-index: 2;
    }
</style>
<div class="center-wrapper">
    <div class="reset-container">
        <!-- Título da página -->
        <h1>@ViewData["Title"]</h1>

        <!-- Início do formulário -->
        <form method="post">
            <!-- Mostra mensagens de erro de validação geral do modelo -->
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <!-- Código de recuperação escondido, incluído automaticamente via link no email -->
            <input asp-for="Input.Code" type="hidden" />

            <!-- Campo de email -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" placeholder="Email" />
                <label asp-for="Input.Email" class="form-label">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <!-- Campo da nova password com botão de visibilidade -->
            <div class="form-floating password-wrapper">
                <input asp-for="Input.Password" class="form-control" id="password" placeholder="Password" />
                <label asp-for="Input.Password" class="form-label">Password</label>
                <button type="button" class="toggle-password" onclick="togglePassword('password', this)">👁️</button>
            </div>
            <span asp-validation-for="Input.Password" class="text-danger"></span>

            <!-- Campo de confirmação de password -->
            <div class="form-floating password-wrapper">
                <input asp-for="Input.ConfirmPassword" class="form-control" id="confirmPassword" placeholder="Confirm password" />
                <label asp-for="Input.ConfirmPassword" class="form-label">Confirm password</label>
                <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword', this)">👁️</button>
            </div>
            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>

            <!-- Botão de submissão -->
            <button type="submit" class="w-100 btn btn-lg btn-primary">Atualizar</button>
        </form>
    </div>
</div>
@section Scripts {
    <!-- Importa scripts para validação do lado do cliente (jQuery validation + unobtrusive) -->
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Alterna visibilidade da password entre 'password' e 'text'
        function togglePassword(id, btn) {
            const input = document.getElementById(id);
            const isPassword = input.type === 'password';
            input.type = isPassword ? 'text' : 'password';
            btn.textContent = isPassword ? '🙈' : '👁️';
        }
    </script>
}
