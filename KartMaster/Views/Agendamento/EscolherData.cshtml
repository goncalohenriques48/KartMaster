@{
    // Define o título da página
    ViewData["Title"] = "Escolher Data";
    // Recupera os dados passados pela controller através de ViewBag
    var autodromo = ViewBag.Autodromo as KartMaster.Models.Autodromo;
    var corridas = ViewBag.Corridas as List<KartMaster.Models.Corrida>;
    var corridasReservadas = ViewBag.CorridasReservadas as List<int>;
}

@* Verifica se o autódromo foi encontrado. Caso contrário, mostra a mensagem de erro e interrompe a renderização *@
@if (autodromo == null)
{
    <p style="color:red;">Autódromo não encontrado.</p>
    return;
}

<div class="autodromo-reserva"
     style="background: linear-gradient(to bottom, rgba(26, 26, 26, 0.8), rgba(51, 51, 51, 0.8)), url('/images/') no-repeat center center;
            background-size: cover;">
    <div class="reserva-info">
        <h2>Reserva - @autodromo.Nome</h2>
        <p><strong>Localização:</strong> @autodromo.Localizacao</p>
        <p><strong>Capacidade:</strong> @autodromo.Capacidade pessoas</p>

        @* Mostra uma mensagem de erro, se houver, enviada via TempData *@
        @if (TempData["Erro"] != null)
        {
            <div class="alert alert-danger">
                @TempData["Erro"]
            </div>
        }

        @* Formulário para submissão da reserva *@
        <form method="post" asp-action="ConfirmarReserva">
            @* ID do autódromo (oculto) *@
            <input type="hidden" name="AutodromoId" value="@autodromo.Id" />

            @* Se existirem corridas, mostra dropdown para seleção *@
            @if (corridas != null && corridas.Any())
            {
                <div class="form-group">
                    <label for="corridaSelecionada">Escolher Corrida:</label>
                    <select id="corridaSelecionada" class="form-control" name="CorridaId">
                        @foreach (var corrida in corridas)
                        {
                            var dur = corrida.Duracao;
                            var partes = new List<string>();
                            if (dur.Hours > 0) partes.Add($"{dur.Hours}h");
                            if (dur.Minutes > 0) partes.Add($"{dur.Minutes}min");
                            if (dur.Seconds > 0) partes.Add($"{dur.Seconds}s");
                            var duracaoFormatada = string.Join(" ", partes);
                            // Verifica se esta corrida já foi reservada
                            bool desativada = corridasReservadas != null && corridasReservadas.Contains(corrida.Id);

                            var disabledAttr = desativada ? "disabled=\"disabled\"" : "";
                            // Texto visível no dropdown
                            var texto = $"{corrida.Nome} - {corrida.Data.ToShortDateString()} {corrida.Hora:hh\\:mm} - Duração: {duracaoFormatada}";
                            if (desativada) texto += " (já reservada)";

                            // Renderiza a <option> com ou sem disabled
                            @Html.Raw($"<option value=\"{corrida.Id}\" {disabledAttr}>{texto}</option>")
                        }
                    </select>
                </div>
            }

            @* Campo para nome do utilizador que está a reservar *@
            <div class="form-group">
                <label for="NomeReservante">Nome:</label>
                <input type="text" name="NomeReservante" required class="form-control" />
            </div>

            @* Campo para número de pessoas na reserva *@
            <div class="form-group">
                <label for="NumeroPessoas">Número de Pessoas:</label>
                <input type="number" name="NumeroPessoas" min="1" max="20" required class="form-control" />
            </div>

            @* Botão para submeter a reserva *@
            <button type="submit" class="btn-confirmar">Confirmar Reserva</button>
        </form>
    </div>
</div>

@* Estilos específicos da página *@
<style>
    .autodromo-reserva {
        color: white;
        border-radius: 10px;
        padding: 30px;
        box-shadow: 0 0 15px rgba(0,0,0,0.3);
        width: 90%;
        max-width: 600px;
        margin: 30px auto;
        text-shadow: 1px 1px 2px black;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border-radius: 5px;
        border: none;
    }

    .btn-confirmar {
        margin-top: 10px;
        padding: 10px 25px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-confirmar:hover {
        background-color: #218838;
    }

    .alert-danger {
        background-color: #dc3545;
        color: white;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }
</style>
