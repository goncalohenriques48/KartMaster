// <auto-generated />
using System;
using KartMaster.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KartMaster.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250405182542_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KartMaster.Models.Autodromo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autodromos");
                });

            modelBuilder.Entity("KartMaster.Models.Corrida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutodromoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutodromoId");

                    b.ToTable("Corridas");
                });

            modelBuilder.Entity("KartMaster.Models.Participacao", b =>
                {
                    b.Property<int>("ParticipacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipacaoId"));

                    b.Property<int>("CorridaId")
                        .HasColumnType("int");

                    b.Property<string>("PosicaoFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TempoFinal")
                        .HasColumnType("time");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("ParticipacaoId");

                    b.HasIndex("CorridaId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Participacoes");
                });

            modelBuilder.Entity("KartMaster.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("KartMaster.Models.Corrida", b =>
                {
                    b.HasOne("KartMaster.Models.Autodromo", "Autodromo")
                        .WithMany("Corridas")
                        .HasForeignKey("AutodromoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autodromo");
                });

            modelBuilder.Entity("KartMaster.Models.Participacao", b =>
                {
                    b.HasOne("KartMaster.Models.Corrida", "Corrida")
                        .WithMany("Participacoes")
                        .HasForeignKey("CorridaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartMaster.Models.Utilizador", "Utilizador")
                        .WithMany("Participacoes")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corrida");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("KartMaster.Models.Autodromo", b =>
                {
                    b.Navigation("Corridas");
                });

            modelBuilder.Entity("KartMaster.Models.Corrida", b =>
                {
                    b.Navigation("Participacoes");
                });

            modelBuilder.Entity("KartMaster.Models.Utilizador", b =>
                {
                    b.Navigation("Participacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
